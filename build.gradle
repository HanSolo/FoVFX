buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.2'
        classpath 'org.javamodularity:moduleplugin:1.6.0'
        classpath 'org.beryx:badass-jlink-plugin:2.17.2'
    }
}

plugins {
    id 'java-library'
    id 'application'
    id 'com.google.osdetector' version '1.6.2'
    id 'org.javamodularity.moduleplugin' version '1.6.0'
    id 'org.beryx.jlink' version '2.17.2'
}


group 'eu.hansolo.fx.fov'
version '1.0'

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    implementation "org.openjfx:javafx-base:11:$platform"
    implementation "org.openjfx:javafx-graphics:11:$platform"
    implementation "org.openjfx:javafx-controls:11:$platform"
    //implementation "org.openjfx:javafx-fxml:11:$platform"
    implementation "org.openjfx:javafx-media:11:$platform"
    implementation "org.openjfx:javafx-web:11:$platform"
    implementation ('com.googlecode.json-simple:json-simple:1.1.1') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
}

mainClassName = "$moduleName/eu.hansolo.fx.fov.Main"

// start the app from gradle
task Main(type: JavaExec) {
    main = "eu.hansolo.fx.fov.Launcher"
    classpath = sourceSets.main.runtimeClasspath
}

jar {
    from {
        (configurations.runtimeClasspath).collect {  it.isDirectory() ? it : zipTree(it)  }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes ('Implementation-Title': 'FoVFX',
                    'Class-Path': 'FovFX-1.0.jar ',
                    'Main-Class': 'eu.hansolo.fx.fov.Launcher')
    }
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'eu.hansolo.fx.fov'
    }
}